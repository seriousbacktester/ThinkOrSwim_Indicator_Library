# thinkorswim thinkscript code
# Indicator: ROC StDev Buy Arrows
# Version: 1.1
# Description: Plots buy arrows on the main chart based on Rate of Change (ROC),
#              its Standard Deviation, and ROC momentum conditions.

# declare upper; # This will plot on the main price chart by default if 'declare lower' is absent.
                 # Explicitly stating 'declare upper;' is also fine.

# --- Input Parameters ---
input lengthROC = 14;
input priceSource = {
    default CLOSE,
    OPEN,
    HIGH,
    LOW
};
input lengthStDev = 200;
input multiplier = 1.5;

# --- Input Validation and Data Preparation ---
Assert(lengthROC >= 1, "'Length for ROC' must be 1 or greater.");
Assert(lengthStDev >= 1, "'Length for StDev' must be 1 or greater.");
Assert(multiplier > 0, "'Multiplier' must be greater than 0.");

def dataPrice;
switch (priceSource) {
case OPEN:
    dataPrice = open;
case HIGH:
    dataPrice = high;
case LOW:
    dataPrice = low;
case CLOSE:
    dataPrice = close;
}

# --- Core Calculations ---

# 1. Calculate Rate of Change (ROC)
def rocValue = RateOfChange(price = dataPrice, length = lengthROC);

# 2. Calculate Standard Deviation of the ROC
def stDevOfROC = StDev(data = rocValue, length = lengthStDev);

# --- Buy Signal Conditions ---

# Condition 1: Current ROC is less than (more negative than) Multiplier * (0 - ROC standard deviation)
def condition1 = rocValue < multiplier * (-stDevOfROC);

# Condition 2: ROC is more positive than ROC from 1 bar ago
def condition2 = rocValue > rocValue[1];

# Condition 3: ROC is more positive than ROC from 3 bars ago
def condition3 = rocValue > rocValue[3];

# Combine all conditions for the buy signal
def buySignal = condition1 and condition2 and condition3;

# --- Plotting Arrows ---
plot BuyArrow = if buySignal then low else Double.NaN;
BuyArrow.SetPaintingStrategy(PaintingStrategy.ARROW_UP);
BuyArrow.SetDefaultColor(Color.GREEN); # You can change this color
BuyArrow.SetLineWeight(2); # Adjust for arrow size/visibility

# --- Optional: Hide the plot line if only arrows are desired (not strictly necessary for ARROW_UP)
# BuyArrow.Hide(); # If you see a connecting line you don't want, uncomment this.
                 # PaintingStrategy.ARROW_UP usually handles this well.

# --- Label (Optional - if you still want to see some values) ---
# You could add a label for debugging or information, but it might clutter the main chart.
# Example:
# AddLabel(yes, "ROC: " + Round(rocValue,2) + " | Thr: " + Round(multiplier * (-stDevOfROC), 2), Color.WHITE);

# --- End of Code ---