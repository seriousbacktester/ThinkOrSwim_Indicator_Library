# thinkorswim thinkscript code
# Indicator: ROC StDev Buy Arrows
# Version: 1.5
# Description: Renamed 'lengthStDev' input to 'StDevLength' to prevent a parameter
#              mismatch error that causes the scanner to crash. This is a common
#              issue when input names are composed of multiple words.

# declare upper; # This will plot on the main price chart by default if 'declare lower' is absent.
                 # Explicitly stating 'declare upper;' is also fine.

# --- Input Parameters ---
input lengthROC = 14;
input priceSource = {
    default CLOSE,
    OPEN,
    HIGH,
    LOW
};
input StDevLength = 200;
input multiplier = 2.0;

# --- Data Preparation ---
# Note: Input validation (Assert) removed to improve scanner stability.
def dataPrice;
if (priceSource == priceSource.OPEN) {
    dataPrice = open;
} else if (priceSource == priceSource.HIGH) {
    dataPrice = high;
} else if (priceSource == priceSource.LOW) {
    dataPrice = low;
} else {
    dataPrice = close;
}

# --- Core Calculations ---

# 1. Calculate Rate of Change (ROC)
def rocValue = RateOfChange(price = dataPrice, length = lengthROC);

# 2. Calculate Standard Deviation of the ROC
def stDevOfROC = StDev(data = rocValue, length = StDevLength);

# --- Buy Signal Conditions ---

# Condition 1: Current ROC is less than (more negative than) Multiplier * (0 - ROC standard deviation)
def condition1 = rocValue < multiplier * (-stDevOfROC);

# Condition 2: ROC is more positive than ROC from 1 bar ago
def condition2 = rocValue > rocValue[1];

# Condition 3: ROC is more positive than ROC from 3 bars ago
def condition3 = rocValue > rocValue[3];

# Combine all conditions for the buy signal
def buySignal = condition1 and condition2 and condition3;

# --- Unified Plot for Charting and Scanning ---
# This single plot serves two purposes:
# 1. On a chart, it displays an arrow when a buy signal occurs.
# 2. In the scanner, you can check if this plot "is not NaN" to find signals.
plot BuySignalPlot = if buySignal then low else Double.NaN;

BuySignalPlot.SetPaintingStrategy(PaintingStrategy.ARROW_UP);
BuySignalPlot.SetDefaultColor(Color.GREEN);
BuySignalPlot.SetLineWeight(2);

# --- Label (Optional - if you still want to see some values) ---
# You could add a label for debugging or information, but it might clutter the main chart.
# Example:
# AddLabel(yes, "ROC: " + Round(rocValue,2) + " | Thr: " + Round(multiplier * (-stDevOfROC), 2), Color.WHITE);

# --- End of Code ---
